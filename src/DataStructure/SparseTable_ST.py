import math
"""
ST表(Sparse Table, 稀疏表)

主要用来解决RMQ(区间最大/最小值查询)问题。主要应用 倍增思想，O(nlogn)预处理，O(1)查询。
凡是复合 结合律 且 可重复贡献的信息查询都可用ST表
如：最大/小值、最大公因数、最小公倍数、按位 或/与。
1.预处理ST表
倍增发递推：用两个等长小区间拼凑一个大区间
f[i][j] 以第i个数为起点，长度为 2^j 的区间长度的最值
f[i][j] = max(f[i][j-1], f[i+2^(j-1)][j-1]

2.查询询问
对查询区间[l,r]做分割、拼凑
区间长度的指数k = log2(r - l + 1)   下取整了

2^k <= r - l + 1 < 2*2^k
即区间[l,r]必可以用两个长度为2^k的区间 重叠拼凑 
即 max(f[l][k], f[r-2^k+1][k])
"""
# 下标从0开始
def ST():
    N = 10 ** 5 + 10
    n = 100
    m = 10
    #初始化 2^0
    f = [[0] * 20 for _ in range(N)]
    for i in range(n): f[i][0] = i
    # 预处理
    for j in range(1, 20):  #logn
        # 枚举每个长度为(1<<j)长度的区间左端点，若下标从1开始为+2
        for i in range(n - (1 << j) + 1):
            f[i][j] = max(f[i][j - 1], f[i + (1 << (j - 1))][j - 1])
    # 查询
    for i in range(m):
        l, r = 0, 0     #查询区间长度
        k = int(math.log2(r - l + 1))
        res = max(f[l][k], f[r - (1 << k) + 1][k])